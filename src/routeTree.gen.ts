/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const ShowsLazyImport = createFileRoute('/shows')()
const MoviesLazyImport = createFileRoute('/movies')()
const IndexLazyImport = createFileRoute('/')()
const ShowsIdLazyImport = createFileRoute('/shows/$id')()
const MoviesIdLazyImport = createFileRoute('/movies/$id')()

// Create/Update Routes

const ShowsLazyRoute = ShowsLazyImport.update({
  path: '/shows',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/shows.lazy').then((d) => d.Route))

const MoviesLazyRoute = MoviesLazyImport.update({
  path: '/movies',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/movies.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ShowsIdLazyRoute = ShowsIdLazyImport.update({
  path: '/$id',
  getParentRoute: () => ShowsLazyRoute,
} as any).lazy(() => import('./routes/shows.$id.lazy').then((d) => d.Route))

const MoviesIdLazyRoute = MoviesIdLazyImport.update({
  path: '/$id',
  getParentRoute: () => MoviesLazyRoute,
} as any).lazy(() => import('./routes/movies.$id.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/movies': {
      preLoaderRoute: typeof MoviesLazyImport
      parentRoute: typeof rootRoute
    }
    '/shows': {
      preLoaderRoute: typeof ShowsLazyImport
      parentRoute: typeof rootRoute
    }
    '/movies/$id': {
      preLoaderRoute: typeof MoviesIdLazyImport
      parentRoute: typeof MoviesLazyImport
    }
    '/shows/$id': {
      preLoaderRoute: typeof ShowsIdLazyImport
      parentRoute: typeof ShowsLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  MoviesLazyRoute.addChildren([MoviesIdLazyRoute]),
  ShowsLazyRoute.addChildren([ShowsIdLazyRoute]),
])

/* prettier-ignore-end */
